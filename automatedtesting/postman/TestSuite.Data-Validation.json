{
	"info": {
		"_postman_id": "73250e44-fdfe-49f8-9f58-2c74d2bb28ce",
		"name": "Data Validation Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7690398"
	},
	"item": [
		{
			"name": "Create Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const expectedSchema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"        \"ID\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Title\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"DueDate\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Completed\": {\r",
							"            \"type\": \"boolean\"\r",
							"        }\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('Response matches JSON schema', () => {\r",
							"    pm.response.to.have.jsonSchema(expectedSchema);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body should contain specific data\", function () {\r",
							"    var submittedTitle = pm.collectionVariables.get(\"title\");\r",
							"    var submittedDueDate = pm.collectionVariables.get(\"dueDate\");\r",
							"    \r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Title).to.eql(submittedTitle);\r",
							"    pm.expect(jsonData.DueDate).to.equal(submittedDueDate);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"ID\": 0,\r\n  \"Title\": \"{{title}}\",\r\n  \"DueDate\": \"{{dueDate}}\",\r\n  \"Completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Activities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const expectedSchema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"ID\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Title\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"DueDate\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Completed\": {\r",
							"            \"type\": \"boolean\"\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"};\r",
							"\r",
							"pm.test('Response matches JSON schema', () => {\r",
							"    pm.response.to.have.jsonSchema(expectedSchema);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body should contain specific data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].Title).to.eql(\"Activity 1\");\r",
							"    pm.expect(jsonData[0].Completed).to.equal(false);\r",
							"\r",
							"    pm.expect(jsonData[29].Title).to.eql(\"Activity 30\");\r",
							"    pm.expect(jsonData[29].Completed).to.equal(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Activities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Activities"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://udacity-devops-p3-appservice.azurewebsites.net",
			"type": "string"
		},
		{
			"key": "title",
			"value": "Test Activity",
			"type": "string"
		},
		{
			"key": "dueDate",
			"value": "2023-12-16T02:47:03.23Z",
			"type": "string"
		}
	]
}